<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd ">
	<cache:annotation-driven cache-manager="cacheManager" key-generator="srpKeyGenerator"/>
	<bean id="srpKeyGenerator" class="cn.ffcs.srp.util.cache.SrpKeyGenerator"></bean>
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:configure/ehcache.xml" p:shared="true"/>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="cacheManagerFactory"/>
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true"/>
	<!-- 日志开始 -->
	<bean id="logFactory" class="cn.ffcs.srp.log.LogFactory">
		<property name="resolver">
			<bean class="cn.ffcs.srp.log.support.LogResolver"></bean>
		</property>
		<property name="persistLog">
			<bean class="cn.ffcs.srp.log.support.DefaultPersistLog"></bean>
		</property>
	</bean>
	<bean id="logInterceptor" class="cn.ffcs.srp.log.interceptor.LogInterceptor">
		<property name="factory" ref="logFactory"></property>
	</bean>
	<aop:config>
		<aop:aspect ref="logInterceptor">
			<aop:after-returning method="executeLogOfAfter" pointcut="@annotation(log)" arg-names="log"/>
			<aop:after-returning method="executeLogsOfAfter" pointcut="@annotation(logs)" arg-names="logs"/>
		</aop:aspect>
	</aop:config>
	<!-- 日志结束 -->
	
	<!-- 数据集转换 -->
	<bean id="convertorFactory" class="cn.ffcs.srp.core.repository.convertor.ConvertorFactory">
		<property name="convertors">
			<map>
				<entry key-ref="date">
					<ref local="dateConvertor"/>
				</entry>
				<entry key-ref="dict">
					<ref local="dictionaryConvertor"/>
				</entry>
				<entry key-ref="user">
					<ref local="userConvertor"/>
				</entry>
			</map>
		</property>
	</bean>
	<util:constant id="date" static-field="cn.ffcs.srp.core.repository.convertor.support.DateConvertor.CONVERTOR_KEY_DEFAULT"/>
	<util:constant id="dict" static-field="cn.ffcs.srp.app.dictionary.convertor.DictionaryConvertor.CONVERTOR_KEY_DEFAULT"/>
	<util:constant id="user" static-field="cn.ffcs.srp.app.common.convertor.DefaultUserInfoConvertor.CONVERTOR_KEY_DEFAULT"/>
	<!-- 日期转换 -->
	<bean id="dateConvertor" class="cn.ffcs.srp.core.repository.convertor.support.DateConvertor"></bean>
	<!-- 数据字典转换 -->
	<bean id="dictionaryConvertor" class="cn.ffcs.srp.app.dictionary.convertor.DictionaryConvertor"></bean>
	<!-- 用户转换 -->
	<bean id="userConvertor" class="cn.ffcs.srp.app.common.convertor.DefaultUserInfoConvertor"></bean>
	
	<!-- sql语句注释解析 -->
	<bean id="sqlParserFactory" class="cn.ffcs.srp.core.repository.parser.SqlParserFactory">
		<property name="parsers">
			<list>
				<bean class="cn.ffcs.srp.core.repository.parser.support.CommentOfMySqlAndOracleParser"></bean>
			</list>
		</property>
	</bean>
	<!-- session数据存储 -->
	<bean id="storageFactory" class="cn.ffcs.srp.app.security.storage.SessionStorageFactory">
		<property name="storages">
			<list>
				<bean class="cn.ffcs.srp.app.resource.storage.ResourceSessionStorage"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 数据验证 -->
	<bean id="validationIntercept" class="cn.ffcs.srp.validator.intercept.ValidationIntercept">
		<property name="validatorFactroy">
			<ref bean="validator"/>
		</property>
		<property name="interrupt" value="false"></property>
	</bean>
	<aop:config>
		<aop:aspect ref="validationIntercept">
			<aop:pointcut expression="@annotation(cn.ffcs.srp.validator.annotation.SrpValid)" id="validPoint"/>
			<aop:before method="doValid" pointcut-ref="validPoint"/>
		</aop:aspect>
	</aop:config>
	<!-- 角色权限变化 通知-->
	<bean id="roleServiceObservable" class="cn.ffcs.srp.app.role.service.RoleServiceObservable">
		<constructor-arg name="observers">
			<list>
				<ref bean="resourcesOfAuthentication"/>
			</list>
		</constructor-arg>
	</bean>
	<!-- 消息推送 -->
	<bean id="eventSourceFactory" class="cn.ffcs.srp.comet.EventSourceFactory">
		<property name="eventSources">
			<list>
				<!-- 
				<bean class="cn.ffcs.srp.comet.EventSourceTest"/>
				 -->
			</list>
		</property>
	</bean>
	
	<!-- 默认用户信息提供类 -->
	<bean class="cn.ffcs.srp.app.common.support.DefaultUserInfoService"></bean>
	<!-- 默认组用户提供类 -->
	<bean class="cn.ffcs.srp.app.common.support.DefaultGroupInfoService"></bean>
	
	<!-- 邮件发送 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.ffcs.cn"/>
		<property name="protocol" value="smtp" />
		<property name="port" value="25"/>
		<property name="username" value="edi_service"/>
		<property name="password" value="fipffcs1234"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
	</bean>
	<!-- 公共字段 -->
	<bean id="publicFieldConfiguration" class="cn.ffcs.srp.core.repository.publicField.PublicFieldConfiguration">
		<property name="publicField">
			<bean class="cn.ffcs.txb.common.model.DefaultPublicField"></bean>
		</property>
	</bean>
	<!-- 用户service扩展类 -->
	<bean id="extendUserService" class="cn.ffcs.srp.app.user.service.impl.ExtendUserServiceConfig">
		<property name="extendUserServices">
			<list>
				<!-- <bean class="cn.ffcs.srp.app.webim.service.impl.ChatUserExtendServiceImpl"></bean> -->
			</list>
		</property>
	</bean>
	<!-- 
	<context:load-time-weaver aspectj-weaving="autodetect" weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"/>
	<context:load-time-weaver aspectj-weaving="autodetect"/>
	-->
	<bean class="cn.ffcs.srp.util.i18n.MessageSourceUtil"></bean>
	<bean class="cn.ffcs.srp.util.ApplicationContextUtil"></bean>
	<bean class="cn.ffcs.srp.app.common.util.GroupInfoServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.common.util.UserInfoServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.dictionary.service.util.DictionaryServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.dictionary.service.util.DictionaryServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.message.service.util.MessageServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.param.service.KeyGenerator"></bean>
	<bean class="cn.ffcs.srp.app.param.service.KeyGenerator"></bean>
	<bean class="cn.ffcs.srp.core.repository.publicField.PublicFieldUtil"></bean>
	<bean class="cn.ffcs.srp.email.MailServiceUtil"></bean>
	<!-- 
	<bean class="cn.ffcs.srp.app.webim.service.util.ChatMessageServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.webim.service.util.ChatUserServiceUtil"></bean>
	<bean class="cn.ffcs.srp.app.workflow.util.WorkflowUtil"></bean>
	 -->
</beans>